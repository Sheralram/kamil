import { __decorate, __param } from 'tslib';
import { InjectionToken, Optional, Inject, ɵɵdefineInjectable, ɵɵinject, Injectable, Renderer2, ElementRef, Input, Directive, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { CommonModule } from '@angular/common';

// SPinner Types
var SPINNER;
(function (SPINNER) {
    SPINNER["xWanderingCubes"] = "x-wandering-cubes";
    SPINNER["xBallSpin"] = "x-ball-spin";
    SPINNER["xChasingDots"] = "x-chasing-dots";
    SPINNER["xElapsis"] = "x-elapsis";
    SPINNER["circleSpinner"] = "circle-spinner";
    SPINNER["threeStrings"] = "three-strings";
    SPINNER["wanderingCubes"] = "wandering-cubes";
})(SPINNER || (SPINNER = {}));
// Element Positions
var POSITION;
(function (POSITION) {
    POSITION["bottomCenter"] = "bottom-center";
    POSITION["bottomLeft"] = "bottom-left";
    POSITION["bottomRight"] = "bottom-right";
    POSITION["centerCenter"] = "center-center";
    POSITION["centerLeft"] = "center-left";
    POSITION["centerRight"] = "center-right";
    POSITION["topCenter"] = "top-center";
    POSITION["topLeft"] = "top-left";
    POSITION["topRight"] = "top-right";
})(POSITION || (POSITION = {}));

const NGX_LOADING_X_TOKEN = new InjectionToken('ngxLoadingXConfig.config');

const DEFAULT_CONFIG = {
    show: false,
    bgBlur: 5,
    bgColor: 'rgba(40, 40, 40, 0.5)',
    bgOpacity: 5,
    bgLogoUrl: '',
    bgLogoUrlPosition: POSITION.bottomRight,
    bgLogoUrlSize: 100,
    spinnerType: SPINNER.wanderingCubes,
    spinnerSize: 120,
    spinnerColor: '#dd1b16',
    spinnerPosition: POSITION.centerCenter,
};
// Spinner Configuration
const SPINNER_CONFIG = {
    'x-wandering-cubes': {
        divs: 2,
        class: 'x-wandering-cubes'
    },
    'x-ball-spin': {
        divs: 8,
        class: 'x-ball-spin'
    },
    'x-chasing-dots': {
        divs: 2,
        class: 'x-chasing-dots'
    },
    'x-elapsis': {
        divs: 12,
        class: 'x-elapsis'
    },
    'circle-spinner': {
        divs: 12,
        class: 'circle-spinner'
    },
    'three-strings': {
        divs: 3,
        class: 'sk-three-strings'
    },
    'wandering-cubes': {
        divs: 2,
        class: 'sk-wandering-cubes'
    }
};

let NgxLoadingXService = class NgxLoadingXService {
    constructor(config) {
        this.config = config;
        this.defaultConfig = Object.assign({}, DEFAULT_CONFIG);
        if (this.config) {
            this.defaultConfig = Object.assign(Object.assign({}, DEFAULT_CONFIG), this.config);
        }
    }
    getDefaultConfig() {
        return Object.assign({}, this.defaultConfig);
    }
};
NgxLoadingXService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NGX_LOADING_X_TOKEN,] }] }
];
NgxLoadingXService.ɵprov = ɵɵdefineInjectable({ factory: function NgxLoadingXService_Factory() { return new NgxLoadingXService(ɵɵinject(NGX_LOADING_X_TOKEN, 8)); }, token: NgxLoadingXService, providedIn: "root" });
NgxLoadingXService = __decorate([
    Injectable({
        providedIn: 'root'
    }),
    __param(0, Optional()), __param(0, Inject(NGX_LOADING_X_TOKEN))
], NgxLoadingXService);

let NgxLoadingXBlurDirective = class NgxLoadingXBlurDirective {
    constructor(renderer, elementRef, ngxLoadingXService) {
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.ngxLoadingXService = ngxLoadingXService;
        this.defaultConfig = this.ngxLoadingXService.getDefaultConfig();
        this.blur = this.defaultConfig.bgBlur;
        this.show = this.defaultConfig.show;
    }
    ngOnChanges() {
        if (this.show) {
            const blurValue = `blur(${this.blur}px)`;
            this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', blurValue);
            this.renderer.setStyle(this.elementRef.nativeElement, 'filter', blurValue);
        }
        else {
            const blurValue = `none`;
            this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', blurValue);
            this.renderer.setStyle(this.elementRef.nativeElement, 'filter', blurValue);
        }
    }
};
NgxLoadingXBlurDirective.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef },
    { type: NgxLoadingXService }
];
__decorate([
    Input()
], NgxLoadingXBlurDirective.prototype, "blur", void 0);
__decorate([
    Input()
], NgxLoadingXBlurDirective.prototype, "show", void 0);
NgxLoadingXBlurDirective = __decorate([
    Directive({
        selector: '[NgxLoadingXBlur]'
    })
], NgxLoadingXBlurDirective);

let NgxLoadingXComponent = class NgxLoadingXComponent {
    constructor(domSanitizer, ngxLoadingXService) {
        this.domSanitizer = domSanitizer;
        this.ngxLoadingXService = ngxLoadingXService;
        this.defaultConfig = this.ngxLoadingXService.getDefaultConfig();
        this.show = this.defaultConfig.show;
        this.bgBlur = this.defaultConfig.bgBlur;
        this.bgColor = this.defaultConfig.bgColor;
        this.bgOpacity = this.defaultConfig.bgOpacity;
        this.bgLogoUrl = this.defaultConfig.bgLogoUrl;
        this.bgLogoUrlPosition = this.defaultConfig.bgLogoUrlPosition;
        this.bgLogoUrlSize = this.defaultConfig.bgLogoUrlSize;
        this.spinnerType = this.defaultConfig.spinnerType;
        this.spinnerSize = this.defaultConfig.spinnerSize;
        this.spinnerColor = this.defaultConfig.spinnerColor;
        this.spinnerPosition = this.defaultConfig.spinnerPosition;
    }
    initializeSpinners() {
        this.spinnerDivs = Array(SPINNER_CONFIG[this.spinnerType].divs).fill(1);
        this.spinnerClass = SPINNER_CONFIG[this.spinnerType].class;
    }
    determineCenterPositions() {
        if (this.bgLogoUrlPosition === POSITION.centerCenter && this.spinnerPosition === POSITION.centerCenter) {
            this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% + 88px)`);
            this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% - 88px)`);
        }
    }
    ngOnInit() {
        this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.bgLogoUrl);
        this.initializeSpinners();
        this.determineCenterPositions();
    }
};
NgxLoadingXComponent.ctorParameters = () => [
    { type: DomSanitizer },
    { type: NgxLoadingXService }
];
__decorate([
    Input()
], NgxLoadingXComponent.prototype, "show", void 0);
__decorate([
    Input()
], NgxLoadingXComponent.prototype, "bgBlur", void 0);
__decorate([
    Input()
], NgxLoadingXComponent.prototype, "bgColor", void 0);
__decorate([
    Input()
], NgxLoadingXComponent.prototype, "bgOpacity", void 0);
__decorate([
    Input()
], NgxLoadingXComponent.prototype, "bgLogoUrl", void 0);
__decorate([
    Input()
], NgxLoadingXComponent.prototype, "bgLogoUrlPosition", void 0);
__decorate([
    Input()
], NgxLoadingXComponent.prototype, "bgLogoUrlSize", void 0);
__decorate([
    Input()
], NgxLoadingXComponent.prototype, "spinnerType", void 0);
__decorate([
    Input()
], NgxLoadingXComponent.prototype, "spinnerSize", void 0);
__decorate([
    Input()
], NgxLoadingXComponent.prototype, "spinnerColor", void 0);
__decorate([
    Input()
], NgxLoadingXComponent.prototype, "spinnerPosition", void 0);
NgxLoadingXComponent = __decorate([
    Component({
        selector: 'ngx-loading-x',
        template: "<!-- container -->\n<div *ngIf=\"show\">\n  <div class=\"ngx-overlay\" [style.background-color]=\"bgColor\" [style.opacity]=\"bgOpacity\">\n    <!-- Logo -->\n    <img *ngIf=\"bgLogoUrl\" class=\"ngx-loading-x-logo\" [ngClass]=\"bgLogoUrlPosition\" [src]=\"trustedLogoUrl\"\n      [style.width.px]=\"bgLogoUrlSize\" [style.height.px]=\"bgLogoUrlSize\" [style.top]=\"logoTop\" />\n    <!-- Logo -->\n\n    <!-- spinner -->\n    <div class=\"ngx-foreground-spinner\" [ngClass]=\"spinnerPosition\" [style.color]=\"spinnerColor\"\n      [style.width.px]=\"spinnerSize\" [style.height.px]=\"spinnerSize\" [style.top]=\"spinnerTop\">\n      <div [class]=\"spinnerClass\">\n        <div *ngFor=\"let div of spinnerDivs\"></div>\n      </div>\n    </div>\n  </div>\n  <!-- End Spinner -->\n\n\n</div>\n\n<!-- container -->\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [".ngx-overlay{position:fixed;top:0;left:0;width:100%;height:100%;z-index:99998!important;cursor:progress;transition:5s ease-out}.ngx-overlay>.ngx-foreground-spinner,.ngx-overlay>.ngx-loading-x-logo{position:fixed;margin:0}.ngx-background-spinner{position:fixed;z-index:99997!important;margin:0;opacity:.6}.ngx-position-absolute,.ngx-position-absolute>.ngx-foreground-spinner,.ngx-position-absolute>.ngx-loading-x-logo{position:absolute!important}.ngx-position-absolute.ngx-overlay{z-index:99995!important}.ngx-position-absolute.ngx-background-spinner{z-index:99994!important}.top-left{top:30px;left:30px}.top-center{top:30px;left:50%;transform:translateX(-50%)}.top-right{top:30px;right:30px}.center-left{top:50%;left:30px;transform:translateY(-50%)}.center-center{top:50%;left:50%;transform:translate(-50%,-50%)}.center-right{top:50%;right:30px;transform:translateY(-50%)}.bottom-left{bottom:30px;left:30px}.bottom-center{bottom:30px;left:50%;transform:translateX(-50%)}.bottom-right{bottom:30px;right:30px}.x-ball-spin,.x-ball-spin>div{position:relative;box-sizing:border-box}.x-ball-spin{width:100%;height:100%;font-size:0}.x-ball-spin>div{display:inline-block;float:none;background-color:currentColor;border:0 solid currentColor;position:absolute;top:50%;left:50%;width:25%;height:25%;margin-top:-12.5%;margin-left:-12.5%;border-radius:100%;-webkit-animation:1s ease-in-out infinite ball-spin;animation:1s ease-in-out infinite ball-spin}.x-ball-spin>div:nth-child(1){top:5%;left:50%;-webkit-animation-delay:-1.125s;animation-delay:-1.125s}.x-ball-spin>div:nth-child(2){top:18.1801948466%;left:81.8198051534%;-webkit-animation-delay:-1.25s;animation-delay:-1.25s}.x-ball-spin>div:nth-child(3){top:50%;left:95%;-webkit-animation-delay:-1.375s;animation-delay:-1.375s}.x-ball-spin>div:nth-child(4){top:81.8198051534%;left:81.8198051534%;-webkit-animation-delay:-1.5s;animation-delay:-1.5s}.x-ball-spin>div:nth-child(5){top:94.9999999966%;left:50.0000000005%;-webkit-animation-delay:-1.625s;animation-delay:-1.625s}.x-ball-spin>div:nth-child(6){top:81.8198046966%;left:18.1801949248%;-webkit-animation-delay:-1.75s;animation-delay:-1.75s}.x-ball-spin>div:nth-child(7){top:49.9999750815%;left:5.0000051215%;-webkit-animation-delay:-1.875s;animation-delay:-1.875s}.x-ball-spin>div:nth-child(8){top:18.179464974%;left:18.1803700518%;-webkit-animation-delay:-2s;animation-delay:-2s}@-webkit-keyframes ball-spin{0%,100%{opacity:1;transform:scale(1)}20%{opacity:1}80%{opacity:0;transform:scale(0)}}@keyframes ball-spin{0%,100%{opacity:1;transform:scale(1)}20%{opacity:1}80%{opacity:0;transform:scale(0)}}.x-chasing-dots{margin:auto;width:100%;height:100%;position:absolute;text-align:center;-webkit-animation:2s linear infinite x-chasingDots-rotate;animation:2s linear infinite x-chasingDots-rotate}.x-chasing-dots>div{width:60%;height:60%;display:inline-block;position:absolute;top:0;background-color:currentColor;border-radius:100%;-webkit-animation:2s ease-in-out infinite x-chasingDots-bounce;animation:2s ease-in-out infinite x-chasingDots-bounce}.x-chasing-dots>div:nth-child(2){top:auto;bottom:0;-webkit-animation-delay:-1s;animation-delay:-1s}@-webkit-keyframes x-chasingDots-rotate{100%{transform:rotate(360deg)}}@keyframes x-chasingDots-rotate{100%{transform:rotate(360deg)}}@-webkit-keyframes x-chasingDots-bounce{0%,100%{transform:scale(0)}50%{transform:scale(1)}}@keyframes x-chasingDots-bounce{0%,100%{transform:scale(0)}50%{transform:scale(1)}}.x-elapsis{display:inline-block;position:relative;width:80px;height:80px}.x-elapsis div{position:absolute;top:33px;width:13px;height:13px;border-radius:50%;background:currentColor;-webkit-animation-timing-function:cubic-bezier(0,1,1,0);animation-timing-function:cubic-bezier(0,1,1,0)}.x-elapsis div:nth-child(1){left:8px;-webkit-animation:.6s infinite lds-ellipsis1;animation:.6s infinite lds-ellipsis1}.x-elapsis div:nth-child(2){left:8px;-webkit-animation:.6s infinite lds-ellipsis2;animation:.6s infinite lds-ellipsis2}.x-elapsis div:nth-child(3){left:32px;-webkit-animation:.6s infinite lds-ellipsis2;animation:.6s infinite lds-ellipsis2}.x-elapsis div:nth-child(4){left:56px;-webkit-animation:.6s infinite lds-ellipsis3;animation:.6s infinite lds-ellipsis3}@-webkit-keyframes lds-ellipsis1{0%{transform:scale(0)}100%{transform:scale(1)}}@keyframes lds-ellipsis1{0%{transform:scale(0)}100%{transform:scale(1)}}@-webkit-keyframes lds-ellipsis3{0%{transform:scale(1)}100%{transform:scale(0)}}@keyframes lds-ellipsis3{0%{transform:scale(1)}100%{transform:scale(0)}}@-webkit-keyframes lds-ellipsis2{0%{transform:translate(0,0)}100%{transform:translate(24px,0)}}@keyframes lds-ellipsis2{0%{transform:translate(0,0)}100%{transform:translate(24px,0)}}.circle-spinner{color:official;display:inline-block;position:relative;width:80px;height:80px}.circle-spinner div{transform-origin:40px 40px;-webkit-animation:1.2s linear infinite circle-spinner;animation:1.2s linear infinite circle-spinner}.circle-spinner div:after{content:\" \";display:block;position:absolute;top:3px;left:37px;width:6px;height:18px;border-radius:20%;background:currentColor}.circle-spinner div:nth-child(1){transform:rotate(0);-webkit-animation-delay:-1.1s;animation-delay:-1.1s}.circle-spinner div:nth-child(2){transform:rotate(30deg);-webkit-animation-delay:-1s;animation-delay:-1s}.circle-spinner div:nth-child(3){transform:rotate(60deg);-webkit-animation-delay:-.9s;animation-delay:-.9s}.circle-spinner div:nth-child(4){transform:rotate(90deg);-webkit-animation-delay:-.8s;animation-delay:-.8s}.circle-spinner div:nth-child(5){transform:rotate(120deg);-webkit-animation-delay:-.7s;animation-delay:-.7s}.circle-spinner div:nth-child(6){transform:rotate(150deg);-webkit-animation-delay:-.6s;animation-delay:-.6s}.circle-spinner div:nth-child(7){transform:rotate(180deg);-webkit-animation-delay:-.5s;animation-delay:-.5s}.circle-spinner div:nth-child(8){transform:rotate(210deg);-webkit-animation-delay:-.4s;animation-delay:-.4s}.circle-spinner div:nth-child(9){transform:rotate(240deg);-webkit-animation-delay:-.3s;animation-delay:-.3s}.circle-spinner div:nth-child(10){transform:rotate(270deg);-webkit-animation-delay:-.2s;animation-delay:-.2s}.circle-spinner div:nth-child(11){transform:rotate(300deg);-webkit-animation-delay:-.1s;animation-delay:-.1s}.circle-spinner div:nth-child(12){transform:rotate(330deg);-webkit-animation-delay:0s;animation-delay:0s}@-webkit-keyframes circle-spinner{0%{opacity:1}100%{opacity:0}}@keyframes circle-spinner{0%{opacity:1}100%{opacity:0}}.sk-three-strings{width:100%;height:100%}.sk-three-strings>div{position:absolute;box-sizing:border-box;width:100%;height:100%;border-radius:50%}.sk-three-strings>div:nth-child(1){left:0;top:0;-webkit-animation:1s linear infinite sk-threeStrings-rotateOne;animation:1s linear infinite sk-threeStrings-rotateOne;border-bottom:3px solid currentColor}.sk-three-strings>div:nth-child(2){right:0;top:0;-webkit-animation:1s linear infinite sk-threeStrings-rotateTwo;animation:1s linear infinite sk-threeStrings-rotateTwo;border-right:3px solid currentColor}.sk-three-strings>div:nth-child(3){right:0;bottom:0;-webkit-animation:1s linear infinite sk-threeStrings-rotateThree;animation:1s linear infinite sk-threeStrings-rotateThree;border-top:3px solid currentColor}@-webkit-keyframes sk-threeStrings-rotateOne{0%{transform:rotateX(35deg) rotateY(-45deg) rotateZ(0)}100%{transform:rotateX(35deg) rotateY(-45deg) rotateZ(360deg)}}@keyframes sk-threeStrings-rotateOne{0%{transform:rotateX(35deg) rotateY(-45deg) rotateZ(0)}100%{transform:rotateX(35deg) rotateY(-45deg) rotateZ(360deg)}}@-webkit-keyframes sk-threeStrings-rotateTwo{0%{transform:rotateX(50deg) rotateY(10deg) rotateZ(0)}100%{transform:rotateX(50deg) rotateY(10deg) rotateZ(360deg)}}@keyframes sk-threeStrings-rotateTwo{0%{transform:rotateX(50deg) rotateY(10deg) rotateZ(0)}100%{transform:rotateX(50deg) rotateY(10deg) rotateZ(360deg)}}@-webkit-keyframes sk-threeStrings-rotateThree{0%{transform:rotateX(35deg) rotateY(55deg) rotateZ(0)}100%{transform:rotateX(35deg) rotateY(55deg) rotateZ(360deg)}}@keyframes sk-threeStrings-rotateThree{0%{transform:rotateX(35deg) rotateY(55deg) rotateZ(0)}100%{transform:rotateX(35deg) rotateY(55deg) rotateZ(360deg)}}.sk-wandering-cubes{margin:auto;width:100%;height:100%;position:relative;text-align:center}.sk-wandering-cubes>div{background-color:currentColor;width:25%;height:25%;position:absolute;top:0;left:0;-webkit-animation:1.8s ease-in-out infinite sk-wanderingCubes-cubeMove;animation:1.8s ease-in-out infinite sk-wanderingCubes-cubeMove}.sk-wandering-cubes>div:nth-child(2){-webkit-animation-delay:-.9s;animation-delay:-.9s}@-webkit-keyframes sk-wanderingCubes-cubeMove{25%{transform:translateX(290%) rotate(-90deg) scale(.5)}50%{transform:translateX(290%) translateY(290%) rotate(-179deg)}50.1%{transform:translateX(290%) translateY(290%) rotate(-180deg)}75%{transform:translateX(0) translateY(290%) rotate(-270deg) scale(.5)}100%{transform:rotate(-360deg)}}@keyframes sk-wanderingCubes-cubeMove{25%{transform:translateX(290%) rotate(-90deg) scale(.5)}50%{transform:translateX(290%) translateY(290%) rotate(-179deg)}50.1%{transform:translateX(290%) translateY(290%) rotate(-180deg)}75%{transform:translateX(0) translateY(290%) rotate(-270deg) scale(.5)}100%{transform:rotate(-360deg)}}.x-wandering-cubes{margin:auto;width:100%;height:100%;position:relative;transform:rotateZ(45deg)}.x-wandering-cubes>div{float:left;width:50%;height:50%;position:relative;transform:scale(1.1)}.x-wandering-cubes>div::before{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;background-color:currentColor;-webkit-animation:2.4s linear infinite both sk-foldingCube-angle;animation:2.4s linear infinite both sk-foldingCube-angle;transform-origin:100% 100%}.x-wandering-cubes>div:nth-child(2){transform:scale(1.1) rotateZ(90deg)}.x-wandering-cubes>div:nth-child(3){transform:scale(1.1) rotateZ(270deg)}.x-wandering-cubes>div:nth-child(4){transform:scale(1.1) rotateZ(180deg)}.x-wandering-cubes>div:nth-child(2)::before{-webkit-animation-delay:.3s;animation-delay:.3s}.x-wandering-cubes>div:nth-child(3)::before{-webkit-animation-delay:.9s;animation-delay:.9s}.x-wandering-cubes>div:nth-child(4)::before{-webkit-animation-delay:.6s;animation-delay:.6s}@-webkit-keyframes sk-foldingCube-angle{0%,10%{transform:perspective(140px) rotateX(-180deg);opacity:0}25%,75%{transform:perspective(140px) rotateX(0);opacity:1}100%,90%{transform:perspective(140px) rotateY(180deg);opacity:0}}@keyframes sk-foldingCube-angle{0%,10%{transform:perspective(140px) rotateX(-180deg);opacity:0}25%,75%{transform:perspective(140px) rotateX(0);opacity:1}100%,90%{transform:perspective(140px) rotateY(180deg);opacity:0}}"]
    })
], NgxLoadingXComponent);

var NgxLoadingXModule_1;
let NgxLoadingXModule = NgxLoadingXModule_1 = class NgxLoadingXModule {
    static forRoot(ngxLoaderXConfig) {
        return {
            ngModule: NgxLoadingXModule_1,
            providers: [
                {
                    provide: NGX_LOADING_X_TOKEN,
                    useValue: ngxLoaderXConfig
                }
            ]
        };
    }
};
NgxLoadingXModule = NgxLoadingXModule_1 = __decorate([
    NgModule({
        declarations: [NgxLoadingXComponent, NgxLoadingXBlurDirective],
        imports: [
            CommonModule,
        ],
        exports: [NgxLoadingXComponent, NgxLoadingXBlurDirective]
    })
], NgxLoadingXModule);

/*
 * Public API Surface of ngx-loading-x
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgxLoadingXBlurDirective, NgxLoadingXComponent, NgxLoadingXModule, NgxLoadingXService, POSITION, SPINNER, NGX_LOADING_X_TOKEN as ɵa };
//# sourceMappingURL=ngx-loading-x.js.map
