import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NgxLoadingXComponent } from './ngx-loading-x.component';
import { NGX_LOADING_X_TOKEN } from './ngx-loading-x-config.token';
import { NgxLoadingXBlurDirective } from './ngx-loading-xblur.directive';
var NgxLoadingXModule = /** @class */ (function () {
    function NgxLoadingXModule() {
    }
    NgxLoadingXModule_1 = NgxLoadingXModule;
    NgxLoadingXModule.forRoot = function (ngxLoaderXConfig) {
        return {
            ngModule: NgxLoadingXModule_1,
            providers: [
                {
                    provide: NGX_LOADING_X_TOKEN,
                    useValue: ngxLoaderXConfig
                }
            ]
        };
    };
    var NgxLoadingXModule_1;
    NgxLoadingXModule = NgxLoadingXModule_1 = __decorate([
        NgModule({
            declarations: [NgxLoadingXComponent, NgxLoadingXBlurDirective],
            imports: [
                CommonModule,
            ],
            exports: [NgxLoadingXComponent, NgxLoadingXBlurDirective]
        })
    ], NgxLoadingXModule);
    return NgxLoadingXModule;
}());
export { NgxLoadingXModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWxvYWRpbmcteC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtbG9hZGluZy14LyIsInNvdXJjZXMiOlsibGliL25neC1sb2FkaW5nLXgubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFakUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDbkUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFXekU7SUFBQTtJQWFBLENBQUM7MEJBYlksaUJBQWlCO0lBRXJCLHlCQUFPLEdBQWQsVUFBZSxnQkFBbUM7UUFDbEQsT0FBTztZQUNMLFFBQVEsRUFBRSxtQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSxtQkFBbUI7b0JBQzVCLFFBQVEsRUFBRSxnQkFBZ0I7aUJBQzNCO2FBQ0Y7U0FDRixDQUFDO0lBQ0osQ0FBQzs7SUFaWSxpQkFBaUI7UUFQN0IsUUFBUSxDQUFDO1lBQ1IsWUFBWSxFQUFFLENBQUMsb0JBQW9CLEVBQUUsd0JBQXdCLENBQUM7WUFDOUQsT0FBTyxFQUFFO2dCQUNQLFlBQVk7YUFDYjtZQUNELE9BQU8sRUFBRSxDQUFDLG9CQUFvQixFQUFFLHdCQUF3QixDQUFDO1NBQzFELENBQUM7T0FDVyxpQkFBaUIsQ0FhN0I7SUFBRCx3QkFBQztDQUFBLEFBYkQsSUFhQztTQWJZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7ICBcbmltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3hMb2FkaW5nWENvbXBvbmVudCB9IGZyb20gJy4vbmd4LWxvYWRpbmcteC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmd4TG9hZGluZ1hDb25maWcgfSBmcm9tICcuL3V0aWxzL05neExvYWRpbmdYQ29uZmlnLmludGVyZmFjZSc7XG5pbXBvcnQgeyBOR1hfTE9BRElOR19YX1RPS0VOIH0gZnJvbSAnLi9uZ3gtbG9hZGluZy14LWNvbmZpZy50b2tlbic7XG5pbXBvcnQgeyBOZ3hMb2FkaW5nWEJsdXJEaXJlY3RpdmUgfSBmcm9tICcuL25neC1sb2FkaW5nLXhibHVyLmRpcmVjdGl2ZSc7XG5cblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtOZ3hMb2FkaW5nWENvbXBvbmVudCwgTmd4TG9hZGluZ1hCbHVyRGlyZWN0aXZlXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgXSxcbiAgZXhwb3J0czogW05neExvYWRpbmdYQ29tcG9uZW50LCBOZ3hMb2FkaW5nWEJsdXJEaXJlY3RpdmVdXG59KVxuZXhwb3J0IGNsYXNzIE5neExvYWRpbmdYTW9kdWxlIHsgXG4gIFxuICBzdGF0aWMgZm9yUm9vdChuZ3hMb2FkZXJYQ29uZmlnOiBOZ3hMb2FkaW5nWENvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8Tmd4TG9hZGluZ1hNb2R1bGU+IHtcbiAgcmV0dXJuIHtcbiAgICBuZ01vZHVsZTogTmd4TG9hZGluZ1hNb2R1bGUsXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICB7XG4gICAgICAgIHByb3ZpZGU6IE5HWF9MT0FESU5HX1hfVE9LRU4sXG4gICAgICAgIHVzZVZhbHVlOiBuZ3hMb2FkZXJYQ29uZmlnXG4gICAgICB9XG4gICAgXVxuICB9O1xufVxufVxuIl19