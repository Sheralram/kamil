{"version":3,"file":"ngx-loading-x.js","sources":["ng://ngx-loading-x/lib/utils/enums.ts","ng://ngx-loading-x/lib/ngx-loading-x-config.token.ts","ng://ngx-loading-x/lib/utils/NgxLoadingXConfig.constants.ts","ng://ngx-loading-x/lib/ngx-loading-x.service.ts","ng://ngx-loading-x/lib/ngx-loading-xblur.directive.ts","ng://ngx-loading-x/lib/ngx-loading-x.component.ts","ng://ngx-loading-x/lib/ngx-loading-x.module.ts","ng://ngx-loading-x/public-api.ts","ng://ngx-loading-x/ngx-loading-x.ts"],"sourcesContent":["\n// SPinner Types\nexport enum SPINNER {\n    xWanderingCubes = 'x-wandering-cubes',\n    xBallSpin = 'x-ball-spin',\n    xChasingDots = 'x-chasing-dots',\n    xElapsis = 'x-elapsis',\n    circleSpinner = 'circle-spinner',\n    threeStrings = 'three-strings',\n    wanderingCubes = 'wandering-cubes'\n}\n\n// Element Positions\nexport enum POSITION {\n    bottomCenter = 'bottom-center',\n    bottomLeft = 'bottom-left',\n    bottomRight = 'bottom-right',\n    centerCenter = 'center-center',\n    centerLeft = 'center-left',\n    centerRight = 'center-right',\n    topCenter = 'top-center',\n    topLeft = 'top-left',\n    topRight = 'top-right'\n}\n\n","import { InjectionToken } from \"@angular/core\";\nimport { NgxLoadingXConfig } from './utils/NgxLoadingXConfig.interface';\n\nexport const NGX_LOADING_X_TOKEN = new InjectionToken<NgxLoadingXConfig>('ngxLoadingXConfig.config')","import { NgxLoadingXConfig } from './NgxLoadingXConfig.interface';\nimport { POSITION, SPINNER } from './enums';\n\nexport const DEFAULT_CONFIG: NgxLoadingXConfig = {\n    show: false,\n    bgBlur: 5,\n    bgColor: 'rgba(40, 40, 40, 0.5)',\n    bgOpacity: 5,\n    bgLogoUrl: '',\n    bgLogoUrlPosition: POSITION.bottomRight,\n    bgLogoUrlSize: 100,\n    spinnerType: SPINNER.wanderingCubes,\n    spinnerSize: 120,\n    spinnerColor: '#dd1b16',\n    spinnerPosition: POSITION.centerCenter,\n}\n\n// Spinner Configuration\nexport const SPINNER_CONFIG = {\n    'x-wandering-cubes': {\n        divs: 2,\n        class: 'x-wandering-cubes'\n    },\n    'x-ball-spin': {\n        divs: 8,\n        class: 'x-ball-spin'\n    },\n    'x-chasing-dots': {\n        divs: 2,\n        class: 'x-chasing-dots'\n    },\n    'x-elapsis': {\n        divs: 12,\n        class: 'x-elapsis'\n    },\n    'circle-spinner': {\n        divs: 12,\n        class: 'circle-spinner'\n    },\n    'three-strings': {\n        divs: 3,\n        class: 'sk-three-strings'\n    },\n    'wandering-cubes': {\n        divs: 2,\n        class: 'sk-wandering-cubes'\n    }\n};","import { Injectable, Optional, Inject } from '@angular/core';\nimport { NGX_LOADING_X_TOKEN } from './ngx-loading-x-config.token';\nimport { NgxLoadingXConfig } from './utils/NgxLoadingXConfig.interface';\nimport { DEFAULT_CONFIG } from './utils/NgxLoadingXConfig.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxLoadingXService {\n  defaultConfig: NgxLoadingXConfig;\n\n  constructor(@Optional() @Inject(NGX_LOADING_X_TOKEN) private config: NgxLoadingXConfig) { \n    this.defaultConfig = {...DEFAULT_CONFIG}\n    if (this.config) {\n      this.defaultConfig = {...DEFAULT_CONFIG, ...this.config}\n    }\n  }\n\n  getDefaultConfig(): NgxLoadingXConfig {\n    return {...this.defaultConfig}\n  }\n}\n","import { Directive, Renderer2, ElementRef, Input, OnChanges } from '@angular/core';\nimport { NgxLoadingXService } from './ngx-loading-x.service';\nimport { NgxLoadingXConfig } from '../public-api';\n\n@Directive({\n  selector: '[NgxLoadingXBlur]'\n})\n\nexport class NgxLoadingXBlurDirective implements OnChanges {\n  defaultConfig: NgxLoadingXConfig;\n  \n  \n  @Input() blur;\n  @Input() show;\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef, private ngxLoadingXService: NgxLoadingXService) {\n    this.defaultConfig = this.ngxLoadingXService.getDefaultConfig();\n\n    this.blur = this.defaultConfig.bgBlur;\n    this.show = this.defaultConfig.show;\n  }\n\n  ngOnChanges() {\n    if (this.show) {\n      const blurValue = `blur(${this.blur}px)`;\n      this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', blurValue);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'filter', blurValue);\n    } else {\n      const blurValue = `none`;\n      this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', blurValue);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'filter', blurValue);\n    }\n  }\n}\n","import { POSITION } from './utils/enums';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { PositionType, SpinnerType } from './utils/types';\nimport { NgxLoadingXConfig } from './utils/NgxLoadingXConfig.interface';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { SPINNER_CONFIG } from './utils/NgxLoadingXConfig.constants';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { NgxLoadingXService } from './ngx-loading-x.service';\n@Component({\n  selector: 'ngx-loading-x',\n  templateUrl: './ngx-loading-x.component.html',\n  styleUrls: ['./ngx-loading-x.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class NgxLoadingXComponent implements OnInit {\n\n  @Input() show: boolean;\n  @Input() bgBlur: number;\n  @Input() bgColor: string;\n  @Input() bgOpacity: number;\n  @Input() bgLogoUrl: string;\n  @Input() bgLogoUrlPosition: PositionType;\n  @Input() bgLogoUrlSize: number;\n  @Input() spinnerType: SpinnerType;\n  @Input() spinnerSize: number;\n  @Input() spinnerColor: string;\n  @Input() spinnerPosition: PositionType;\n\n\n  defaultConfig: NgxLoadingXConfig;\n\n  spinnerDivs: Number[];\n  spinnerClass: string;\n  trustedLogoUrl: SafeResourceUrl;\n\n  spinnerTop;\n  logoTop;\n\n  constructor(private domSanitizer: DomSanitizer, private ngxLoadingXService: NgxLoadingXService) {\n    this.defaultConfig = this.ngxLoadingXService.getDefaultConfig();\n    this.show = this.defaultConfig.show;\n    this.bgBlur = this.defaultConfig.bgBlur;\n    this.bgColor = this.defaultConfig.bgColor;\n    this.bgOpacity = this.defaultConfig.bgOpacity;\n    this.bgLogoUrl = this.defaultConfig.bgLogoUrl;\n    this.bgLogoUrlPosition = this.defaultConfig.bgLogoUrlPosition;\n    this.bgLogoUrlSize = this.defaultConfig.bgLogoUrlSize;\n    this.spinnerType = this.defaultConfig.spinnerType;\n    this.spinnerSize = this.defaultConfig.spinnerSize;\n    this.spinnerColor = this.defaultConfig.spinnerColor;\n    this.spinnerPosition = this.defaultConfig.spinnerPosition;\n  }\n\n\n\n  private initializeSpinners(): void {\n    this.spinnerDivs = Array(SPINNER_CONFIG[this.spinnerType].divs).fill(1);\n    this.spinnerClass = SPINNER_CONFIG[this.spinnerType].class;\n  }\n\n  private determineCenterPositions(): void {\n    if (this.bgLogoUrlPosition === POSITION.centerCenter && this.spinnerPosition === POSITION.centerCenter) {\n      this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% + 88px)`);\n      this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% - 88px)`);\n    }\n  }\n\n  ngOnInit(): void {\n    this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.bgLogoUrl);\n    this.initializeSpinners();\n    this.determineCenterPositions();\n  }\n\n\n}\n","import { CommonModule } from '@angular/common';  \nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxLoadingXComponent } from './ngx-loading-x.component';\nimport { NgxLoadingXConfig } from './utils/NgxLoadingXConfig.interface';\nimport { NGX_LOADING_X_TOKEN } from './ngx-loading-x-config.token';\nimport { NgxLoadingXBlurDirective } from './ngx-loading-xblur.directive';\n\n\n\n@NgModule({\n  declarations: [NgxLoadingXComponent, NgxLoadingXBlurDirective],\n  imports: [\n    CommonModule,\n  ],\n  exports: [NgxLoadingXComponent, NgxLoadingXBlurDirective]\n})\nexport class NgxLoadingXModule { \n  \n  static forRoot(ngxLoaderXConfig: NgxLoadingXConfig): ModuleWithProviders<NgxLoadingXModule> {\n  return {\n    ngModule: NgxLoadingXModule,\n    providers: [\n      {\n        provide: NGX_LOADING_X_TOKEN,\n        useValue: ngxLoaderXConfig\n      }\n    ]\n  };\n}\n}\n","/*\n * Public API Surface of ngx-loading-x\n */\n\nexport { POSITION, SPINNER } from './lib/utils/enums';\nexport { NgxLoadingXBlurDirective } from './lib/ngx-loading-xblur.directive';\nexport { NgxLoadingXConfig } from './lib/utils/NgxLoadingXConfig.interface';\n\nexport * from './lib/ngx-loading-x.service';\nexport * from './lib/ngx-loading-x.component';\nexport * from './lib/ngx-loading-x.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NGX_LOADING_X_TOKEN as Éµa} from './lib/ngx-loading-x-config.token';"],"names":[],"mappings":"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"}